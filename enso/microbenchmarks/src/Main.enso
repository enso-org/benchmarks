from Standard.Base import all

import Standard.Test.Bench
import Standard.Base.System.Environment

import Microbenchmarks.Helpers


main =
    here.print_header
    size = Helpers.parse_int (Environment.get "BENCH_SIZE")
    depth = Helpers.parse_int (Environment.get "BENCH_DEPTH")
    n_iters = Helpers.parse_int (Environment.get "BENCH_ITER")

    here.measure (Helpers.sleep 100) "100ms" 10

    here.measure (here.sum size) "sum" n_iters

    here.measure (here.alloc_vector size) "alloc_vector" n_iters
    vec = here.alloc_vector size
    here.measure (here.sum_vector vec) "sum_vector" n_iters

    here.measure (here.alloc_list size) "alloc_list" n_iters
    list = here.alloc_list size
    here.measure (here.sum_list list) "sum_list" n_iters

    here.measure (here.alloc_full_tree depth) "alloc_full_tree" n_iters
    tree = here.alloc_full_tree depth
    here.measure (here.sum_tree tree) "sum_tree" n_iters
